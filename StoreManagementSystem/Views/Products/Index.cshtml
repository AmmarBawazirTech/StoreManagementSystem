@model IEnumerable<ProductListViewModel>

@{
    ViewData["Title"] = "Product Management";
}

<div class="container-fluid px-4">
    <div class="d-flex justify-content-between align-items-center mb-4">
        <h1 class="mt-4">
            <i class="bi bi-box-seam me-2"></i>@ViewData["Title"]
        </h1>
        <a asp-action="Create" class="btn btn-primary btn-lg">
            <i class="bi bi-plus-circle me-2"></i>Add New Product
        </a>
    </div>

    <div class="card mb-4">
        <div class="card-header bg-white">
            <div class="d-flex justify-content-between align-items-center">
                <h5 class="mb-0">
                    <i class="bi bi-funnel me-2"></i>Product Filters
                </h5>
                <button class="btn btn-sm btn-outline-secondary" type="button" data-bs-toggle="collapse"
                        data-bs-target="#filterCollapse" aria-expanded="true" aria-controls="filterCollapse">
                    <i class="bi bi-chevron-down"></i>
                </button>
            </div>
        </div>
        <div class="collapse show" id="filterCollapse">
            <div class="card-body">
                <form id="filterForm" method="get" class="row g-3">
                    <div class="col-md-6">
                        <label for="searchTerm" class="form-label">Search</label>
                        <div class="input-group">
                            <input type="text" class="form-control" id="searchTerm" name="searchTerm"
                                   value="@Context.Request.Query["searchTerm"]" placeholder="Search products...">
                            <button class="btn btn-outline-primary" type="submit">
                                <i class="bi bi-search"></i>
                            </button>
                        </div>
                    </div>
                    <div class="col-md-4">
                        <label for="categoryId" class="form-label">Category</label>
                        <select class="form-select" id="categoryId" name="categoryId">
                            <option value="">All Categories</option>
                            @foreach (var category in ViewBag.Categories as IEnumerable<SelectListItem>)
                            {
                                <option value="@category.Value" selected="@(category.Value == Context.Request.Query["categoryId"])">
                                    @category.Text
                                </option>
                            }
                        </select>
                    </div>
                    <div class="col-md-2 d-flex align-items-end">
                        <button type="button" class="btn btn-outline-secondary w-100" id="resetFilters">
                            <i class="bi bi-arrow-counterclockwise me-1"></i>Reset
                        </button>
                    </div>
                </form>
            </div>
        </div>
    </div>

    <div class="card mb-4">
        <div class="card-header bg-white d-flex justify-content-between align-items-center">
            <h5 class="mb-0">
                <i class="bi bi-table me-2"></i>Product List
            </h5>
            <div class="dropdown">
                <button class="btn btn-sm btn-outline-secondary dropdown-toggle" type="button"
                        id="exportDropdown" data-bs-toggle="dropdown" aria-expanded="false">
                    <i class="bi bi-download me-1"></i>Export
                </button>
                <ul class="dropdown-menu" aria-labelledby="exportDropdown">
                    <li><a class="dropdown-item" href="#" id="exportExcel"><i class="bi bi-file-excel me-2"></i>Excel</a></li>
                    <li><a class="dropdown-item" href="#" id="exportPdf"><i class="bi bi-file-pdf me-2"></i>PDF</a></li>
                </ul>
            </div>
        </div>
        <div class="card-body">
            <div class="table-responsive">
                <table id="productsTable" class="table table-striped table-hover table-bordered" style="width:100%">
                    <thead>
                        <tr>
                            <th>Name</th>
                            <th>Category</th>
                            <th class="text-end">Price</th>
                            <th class="text-end">Stock</th>
                            <th>Status</th>
                            <th class="text-center">Actions</th>
                        </tr>
                    </thead>
                    <tbody>
                        @foreach (var item in Model)
                        {
                            <tr>
                                <td>
                                    <a asp-action="Details" asp-route-id="@item.ProductId" class="text-decoration-none">
                                        @item.Name
                                    </a>
                                </td>
                                <td>@item.CategoryName</td>
                                <td class="text-end">@item.Price.ToString("C")</td>
                                <td class="text-end">@item.StockQuantity</td>
                                <td>
                                    <span class="badge @(item.StockQuantity > 10 ? "bg-success" :
                                              item.StockQuantity > 0 ? "bg-warning" : "bg-danger")">
                                        @(item.StockQuantity > 10 ? "In Stock" :
                                            item.StockQuantity > 0 ? "Low Stock" : "Out of Stock")
                                    </span>
                                </td>
                                <td class="text-center">
                                    <div class="btn-group" role="group">
                                        <a asp-action="Edit" asp-route-id="@item.ProductId"
                                           class="btn btn-sm btn-outline-primary" data-bs-toggle="tooltip"
                                           title="Edit">
                                            <i class="bi bi-pencil"></i>
                                        </a>
                                        <button class="btn btn-sm btn-outline-danger delete-btn"
                                                data-id="@item.ProductId" data-name="@item.Name"
                                                data-bs-toggle="tooltip" title="Delete">
                                            <i class="bi bi-trash"></i>
                                        </button>
                                    </div>
                                </td>
                            </tr>
                        }
                    </tbody>
                </table>
            </div>
        </div>
    </div>
</div>

@section Scripts {
    <script>
        $(document).ready(function () {
            // Initialize DataTable
            $('#productsTable').DataTable({
                responsive: true,
                columnDefs: [
                    { orderable: false, targets: [5] }
                ],
                initComplete: function() {
                    $('[data-bs-toggle="tooltip"]').tooltip();
                }
            });

            // Delete button click handler
            $('.delete-btn').click(function() {
                const id = $(this).data('id');
                const name = $(this).data('name');

                Swal.fire({
                    title: 'Confirm Delete',
                    html: `Are you sure you want to delete <strong>${name}</strong>?`,
                    icon: 'warning',
                    showCancelButton: true,
                    confirmButtonColor: '#d33',
                    cancelButtonColor: '#3085d6',
                    confirmButtonText: 'Yes, delete it!'
                }).then((result) => {
                    if (result.isConfirmed) {
                        $.ajax({
                            url: `/Products/Delete/${id}`,
                            type: 'POST',
                            headers: {
                                'RequestVerificationToken': $('input[name="__RequestVerificationToken"]').val()
                            },
                            success: function(response) {
                                Swal.fire(
                                    'Deleted!',
                                    'The product has been deleted.',
                                    'success'
                                ).then(() => {
                                    window.location.reload();
                                });
                            },
                            error: function(xhr) {
                                Swal.fire(
                                    'Error!',
                                    'An error occurred while deleting the product.',
                                    'error'
                                );
                            }
                        });
                    }
                });
            });

            // Reset filters button
            $('#resetFilters').click(function() {
                $('#searchTerm').val('');
                $('#categoryId').val('');
                $('#filterForm').submit();
            });

            // Export buttons
            $('#exportExcel').click(function(e) {
                e.preventDefault();
                // Implement Excel export logic
                Swal.fire(
                    'Export to Excel',
                    'This feature will be implemented soon!',
                    'info'
                );
            });

            $('#exportPdf').click(function(e) {
                e.preventDefault();
                // Implement PDF export logic
                Swal.fire(
                    'Export to PDF',
                    'This feature will be implemented soon!',
                    'info'
                );
            });
        });
    </script>
}